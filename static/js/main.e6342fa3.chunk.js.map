{"version":3,"sources":["components/CrudForm.js","components/CrudTableRow.js","components/CrudTable.js","components/CrudApp.js","components/Modal.js","components/Modals.js","hooks/useModal.js","App.js","reportWebVitals.js","index.js"],"names":["initialForm","name","apellido","edad","identificacion","nacionalidad","CrudForm","createData","db","updateData","dataToEdit","setDataToEdit","search","setDb","useState","form","setForm","useEffect","handleChange","e","target","value","console","log","onSubmit","preventDefault","Object","keys","length","alert","type","placeholder","onChange","onClick","CrudTableRow","el","deleteData","CrudTable","data","map","colSpan","CrudApp","id","filter","user","className","newData","window","confirm","Modal","children","isOpen","closeModal","stopPropagation","Modals","initialValue","setIsOpen","useModal","isOpenModal1","openModal1","closeModal1","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6342fa3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst initialForm = {\n  name: \"\",\n  apellido: \"\",\n  edad: \"\",\n  identificacion: \"\",\n  nacionalidad: \"\",\n};\n\nconst CrudForm = ({ createData, db, updateData, dataToEdit, setDataToEdit, setDb, search,  }) => {\n  \n  const [form, setForm] = useState();\n\n   useEffect(() => {\n     if (dataToEdit) {\n      setForm(dataToEdit);\n    } else {\n      setForm(initialForm);\n    }\n   }, [dataToEdit]);\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n  \n  console.log(form)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n     if (!form.name || !form.apellido || !form.edad || !form.identificacion || !form.nacionalidad) {\n        alert(\"Datos incompletos\");\n        return;\n      }\n      \n      \n      \n      console.log(\"db: \" + db)\n      \n      \n      \n      \n      console.log(Object.keys(form).length)\n      //el tamaño mayor o igual a 5 porque tienes 5 inputs\n      if(form && Object.keys(form).length === 5) {\n        !search(form.identificacion) ? createData(form) : updateData(form)\n        console.log(Object.keys(form).length)\n      } else {\n      alert(\"Debes llenar todos los campos.\")\n    }\n\n    \n    \n  };\n\n\n  const handleReset = (e) => {\n    setForm(initialForm);\n    setDataToEdit(null);\n  };\n\n\n  return (\n    <div>\n      <h3>{dataToEdit ? \"Editar\" : \"Agregar\"}</h3> \n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Nombre\"\n          onChange={handleChange}\n          value={dataToEdit && dataToEdit.name}  //value={form.nombre}\n        />\n        <input\n          type=\"text\"\n          name=\"apellido\"\n          placeholder=\"Apellido\"\n          onChange={handleChange}\n          value={dataToEdit && dataToEdit.apellido}\n        />\n        <input\n          type=\"number\"\n          name=\"edad\"\n          placeholder=\"Edad\"\n          onChange={handleChange}\n          value={dataToEdit && dataToEdit.edad}\n        />\n        <input\n          type=\"number\"\n          name=\"identificacion\"\n          placeholder=\"Identificacion\"\n          onChange={handleChange}\n          value={dataToEdit && dataToEdit.identificacion}\n        />\n        <input\n          type=\"text\"\n          name=\"nacionalidad\"\n          placeholder=\"Nacionalidad\"\n          onChange={handleChange}\n          value={dataToEdit && dataToEdit.nacionalidad}\n        />\n\n        <input type=\"submit\" value=\"Enviar\" />\n        <input type=\"reset\" value=\"Limpiar\" onClick={handleReset} />\n      </form>\n    </div>\n  );\n};\n\nexport default CrudForm;\n","import React from \"react\";\n\nconst CrudTableRow = ({ el, setDataToEdit, deleteData }) => {\n  //console.log(el)\n  const { name, apellido, edad, identificacion,nacionalidad} = el;\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{apellido}</td>\n      <td>{edad}</td>\n      <td>{identificacion}</td>\n      <td>{nacionalidad}</td>\n\n      <td>\n        \n        <button onClick={() => deleteData(identificacion)}>Eliminar</button>\n      </td>\n    </tr>\n  );\n};\n\nexport default CrudTableRow;\n","import React from \"react\";\nimport CrudTableRow from \"./CrudTableRow\";\n\nconst CrudTable = ({ data, setDataToEdit, deleteData }) => {\n//console.log(data)\n  return (\n    <div>\n      <h3>Tabla de Datos</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Edad</th>\n            <th>Identificacion</th>\n            <th>Nacionalidad</th>\n            <th>Acciones</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0 ? (\n            data.map((el) => (\n              <CrudTableRow\n                key={el.identificacion}\n                el={el}\n                setDataToEdit={setDataToEdit}\n                deleteData={deleteData}\n              />\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"6\">Sin datos</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CrudTable;\n","import React, { useState } from \"react\";\nimport CrudForm from \"./CrudForm\";\nimport CrudTable from \"./CrudTable\";\n\n\n\nconst CrudApp = () => {\n  //Estado general\n  const [db, setDb] = useState([]);\n  console.log(db)\n\n  \n  const [dataToEdit, setDataToEdit] = useState();\n\n   if (db.length > 0) {\n     console.log(db[0].id)\n   }\n\n  \n  const search = (identificacion) => {\n    \n    return db.filter((user) => user.identificacion == identificacion).length > 0\n  }\n\n  console.log(search(4))\n\n  \n\n  \n\n    // console.log(\"encontrado: \" + test)\n\n\n  const createData = (data) => {\n    console.log(data);\n     setDb([...db, data]);\n  };\n\n  const updateData = (data) => {\n    const newData = db.map((el) => (el.identificacion === data.identificacion ? data : el));\n    setDb(newData);\n  };\n\n  const deleteData = (id) => {\n    const isDelete = window.confirm(\n      `¿Estás seguro de eliminar el registro con el id '${id}'?`\n    );\n\n    if (isDelete) {\n      const newData = db.filter((el) => el.identificacion !== id);\n      setDb(newData);\n    } else {\n      return;\n    }\n  };\n\n  \n\n  return (\n    <div>\n      <h2>CRUD</h2>\n      <article className=\"grid-1-2\">\n        <CrudForm\n           createData={createData}\n          updateData={updateData}\n          dataToEdit={dataToEdit}\n          setDataToEdit={setDataToEdit}\n          db={db}\n          setDb={setDb}\n          search={search}\n        />\n        <CrudTable\n          data={db}\n          setDataToEdit={setDataToEdit}\n          deleteData={deleteData}\n        />\n      </article>\n    </div>\n  );\n};\n\nexport default CrudApp;\n","import \"./Modal.css\";\n\nconst Modal = ({ children, isOpen, closeModal }) => {\n  const handleModalContainerClick = (e) => e.stopPropagation();\n\n  return (\n    <article className={`modal ${isOpen && \"is-open\"}`} onClick={closeModal}>\n      <div className=\"modal-container\" onClick={handleModalContainerClick}>\n        <button className=\"modal-close\" onClick={closeModal}>\n          X\n        </button>\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default Modal;\n","import { useModal } from \"../hooks/useModal\";\nimport Modal from \"./Modal\";\n\n\nconst Modals = () => {\n  const [isOpenModal1, openModal1, closeModal1] = useModal(true);\n \n\n  return (\n    <div>\n      <h2>Imagen bonita</h2>\n      <button onClick={openModal1}>imagenes</button>\n      <Modal isOpen={isOpenModal1} closeModal={closeModal1}>\n        <h3>fotico cute</h3>\n        <p>varias fotos de animales</p>\n        <img src=\"https://placeimg.com/400/400/animals\" alt=\"Animals\" />\n      </Modal>\n      \n      \n    </div>\n  );\n};\n\nexport default Modals;\n","import { useState } from \"react\";\r\n\r\nexport const useModal = (initialValue = false) => {\r\n  const [isOpen, setIsOpen] = useState(initialValue);\r\n\r\n  const openModal = () => setIsOpen(true);\r\n\r\n  const closeModal = () => setIsOpen(false);\r\n\r\n  return [isOpen, openModal, closeModal];\r\n};","import React from \"react\";\nimport CrudApp from \"./components/CrudApp\";\nimport Modals from \"./components/Modals\";\n\nfunction App() {\n  return (\n    <>\n      <h1 >CRUD BASICO</h1>\n      <Modals/>\n      <hr />\n      <CrudApp />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}